<style>
* {
  box-sizing: border-box;
}

body {
  background-color: #f1f1f1;
}

#regForm {
  background-color: #ffffff;
  margin: 10px auto;
  font-family: Raleway;
  padding: 40px;
  width: 70%;
  min-width: 300px;
}

h1 {
  text-align: center;  
}

input {
  height: 2.5%;
  padding: 10px;
  width: 100%;
  font-size: 17px;
  font-family: Raleway;
  border: 1px solid #7e3af2;
  border-radius: 5px;
  margin-bottom: 20px;
}
label{
  margin-bottom: 10px;
  font-family: sans-serif;
    font-size: 1rem;
}

select {
    margin-bottom: 10px;
    font-size: 0.9rem;
    padding: 2px 5px;
}
/* Mark input boxes that gets an error on validation: 
input.invalid {
  background-color:#ae87f2;
}
*/


/* Hide all steps by default: */
.tab {
  display: none;
}

.formbut {
  background-color: #7e3af2;
  color: #ffffff;
  border: none;
  padding: 10px 20px;
  font-size: 17px;
  font-family: Raleway;
  cursor: pointer;
}

button:hover {
  opacity: 0.8;
}

#prevBtn {
  background-color: #7e3af2;
}

/* Make circles that indicate the steps of the form: */
.step {
  height: 15px;
  width: 15px;
  margin: 0 2px;
  background-color: #7e3af2;
  border: none;  
  border-radius: 50%;
  display: inline-block;
  opacity: 0.5;
}

.step.active {
  opacity: 1;
}

/* Mark the steps that are finished and valid: */
.step.finish {
  background-color: #7e3af2;
}

</style>
<main class="h-full pb-16 overflow-y-auto">
<div class="container px-6 mx-auto grid">
    <form id="regForm" action="">

<!-- One "tab" for each step in the form: -->
{{!-- <div class="tab">
  <h4 class="mb-4 text-lg font-semibold text-gray-600 dark:text-gray-300 py-3" style="font-size: 26px;text-align:center;">
      	&#127911; Release Basic Info
    </h4>
  <label for="">Name</label> --}}
  {{!-- <input placeholder="ABC Track" type="" name="" oninput="this.className = ''">
  <label>Version/Subtitle </label><input placeholder="Version/Subtitle" type="version_subtitle" name="" oninput="this.className = ''">
  <label>Primary Artist </label><input placeholder="" type="" name="" oninput="this.className = ''">
  <label>Actor </label><input placeholder="Featuring" type="" name="" oninput="this.className = ''">
  <label style="white-space: nowrap;margin-top:3px;">Various Artist/Compilation </label><input placeholder="" type="checkbox" name=""style="width:50%" oninput="this.className = ''">
  <label for="pet-select">Genre : </label>

<select name="pets" id="pet-select">
    <option value="">--Select Genre--</option>
    <option value="dog">Dog</option>
    <option value="cat">Cat</option>
</select>
  <br>
  <label for="pet-select">SubGenre : </label>

<select name="pets" id="pet-select">
    <option value="">--Select SubGenre--</option>
    <option value="dog">Dog</option>
    <option value="cat">Cat</option>
</select>
  <br> 
<label for="pet-select">Lable Name : </label>
<select name="pets" id="pet-select">
    <option value="">--Select Lable Name--</option>
    <option value="dog">Dog</option>
    <option value="cat">Cat</option>
</select> <br>
<label for="pet-select">Format : </label>
<select name="pets" id="pet-select">
    <option value="">--Single--</option>
    <option value="dog">Dog</option>
    <option value="cat">Cat</option>
</select> <br> 
 <label>Phisical/Original release date </label><input placeholder="Version/Subtitle" type="date" name="" oninput="this.className = ''"required>
  <label>Line </label><input placeholder="Line" type="" name="" oninput="this.className = ''">
  <label>Line </label><input placeholder="Line" type="" name="" oninput="this.className = ''">
<label for="pet-select">Production Year : </label>
<select name="pets" id="pet-select">
    <option value="">--2022--</option>
    <option value="dog">Dog</option>
    <option value="cat">Cat</option> --}}
{{!-- </select> <br>  <label>UPC/EAN</label><input placeholder="UPC/EAN" type="" name="" oninput="this.className = ''"> --}}
  {{!-- <label>Producer Catalogue Number</label>
  <input placeholder="Producer Catalogue Number" type="" name="" oninput="this.className = ''"> --}}
{{!-- </div> --}}

<div class="tab">
  <h4 class="mb-4 text-lg font-semibold text-gray-600 dark:text-gray-300 py-3" style="font-size: 26px;text-align:center;">
      	&#127911; Upload Assets
    </h4>
  <label >Upload Songs </label>
 <div id="target" style="margin-top: 10px;">
  <input placeholder="" type="file" style="height:19%"name="song1" oninput="this.className = ''">
  </div>
 <p
 style="width: 50%;"
          class="px-4 py-2 text-sm font-medium leading-5 text-white transition-colors duration-150 bg-purple-600 border border-transparent rounded-lg active:bg-purple-600 hover:bg-purple-700 focus:outline-none focus:shadow-outline-purple"
          id="addmore">
<b>&plus;</b> Add More
        </p>
        
</div>

<div class="tab">Birthday:
  <p><input placeholder="dd" oninput="this.className = ''"></p>
  <p><input placeholder="mm" oninput="this.className = ''"></p>
  <p><input placeholder="yyyy" oninput="this.className = ''"></p>
</div>

<div class="tab">Login Info:
  <p><input placeholder="Username..." oninput="this.className = ''"></p>
  <p><input placeholder="Password..." oninput="this.className = ''"></p>
</div>
<div class="tab">Login Info:
  <p><input placeholder="Username..." oninput="this.className = ''"></p>
  <p><input placeholder="Password..." oninput="this.className = ''"></p>
</div>

<div style="overflow:auto;">
  <div style="float:right;">
    <button class="formbut" type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
    <button class="formbut" type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
  </div>
</div>

<!-- Circles which indicates the steps of the form: -->
<div style="text-align:center;margin-top:40px;">
  <span class="step"></span>
  <span class="step"></span>
  <span class="step"></span>
  <span class="step"></span>
  <span class="step"></span>
</div>

</form>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
<script>
  var songn = 2;
  $(document).ready(function(){

  // jQuery methods go here...
  $('#addmore').click(function(){ 
       document.getElementById('target').innerHTML += `<input placeholder="" type="file" style="height:19%"name="song${songn}" oninput="this.className = ''">`;
       songn = songn +1;
   });


});

//Multitable code start

  var currentTab = 0; // Current tab is set to be the first tab (0)
showTab(currentTab); // Display the current tab

function showTab(n) {
  // This function will display the specified tab of the form ...
  var x = document.getElementsByClassName("tab");
  x[n].style.display = "block";
  // ... and fix the Previous/Next buttons:
  if (n == 0) {
    document.getElementById("prevBtn").style.display = "none";
  } else {
    document.getElementById("prevBtn").style.display = "inline";
  }
  if (n == (x.length - 1)) {
    document.getElementById("nextBtn").innerHTML = "Submit";
  } else {
    document.getElementById("nextBtn").innerHTML = "Next";
  }
  // ... and run a function that displays the correct step indicator:
  fixStepIndicator(n)
}

function nextPrev(n) {
  // This function will figure out which tab to display
  var x = document.getElementsByClassName("tab");
  // Exit the function if any field in the current tab is invalid:
  if (n == 1 && !validateForm()) return false;
  // Hide the current tab:
  x[currentTab].style.display = "none";
  // Increase or decrease the current tab by 1:
  currentTab = currentTab + n;
  // if you have reached the end of the form... :
  if (currentTab >= x.length) {
    //...the form gets submitted:
    document.getElementById("regForm").submit();
    return false;
  }
  // Otherwise, display the correct tab:
  showTab(currentTab);
}

function validateForm() {
  // This function deals with validation of the form fields
  var x, y, i, valid = true;
  x = document.getElementsByClassName("tab");
  y = x[currentTab].getElementsByTagName("input");
  // A loop that checks every input field in the current tab:
  for (i = 0; i < y.length; i++) {
    // If a field is empty...
    if (y[i].value == "") {
      // add an "invalid" class to the field:
      y[i].className += " invalid";
      // and set the current valid status to false:
      valid = false;
    }
  }
  // If the valid status is true, mark the step as finished and valid:
  if (valid) {
    document.getElementsByClassName("step")[currentTab].className += " finish";
  }
  return valid; // return the valid status
}

function fixStepIndicator(n) {
  // This function removes the "active" class of all steps...
  var i, x = document.getElementsByClassName("step");
  for (i = 0; i < x.length; i++) {
    x[i].className = x[i].className.replace(" active", "");
  }
  //... and adds the "active" class to the current step:
  x[n].className += " active";
}
</script>
</main>
